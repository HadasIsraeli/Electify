{"version":3,"sources":["components/Navbar.js","assets/voting.png","components/Home.js","components/PartyClass.js","components/CardElement.js","components/About.js","components/Contact.js","components/Post.js","assets/blockchain.png","components/BlockApp.js","components/Transaction.js","components/Block.js","components/Blocks.js","components/ConductTransaction.js","components/TransactionPool.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","className","to","Home","props","src","voting","alt","PartyClass","name","number","info","CardElement","map","party","About","Contact","state","posts","axios","get","then","res","console","log","setState","data","slice","this","postList","length","post","id","title","body","Component","Post","match","params","post_id","BlockApp","walletInfo","fetch","document","location","origin","response","json","address","balance","blockchain","Transaction","transaction","input","outputMap","recipients","Object","keys","substring","amount","recipient","Block","displayTransaction","toggleTransaction","block","stringifiedData","JSON","stringify","dataDisplay","onClick","timestamp","hash","hashDisplay","Date","toLocaleString","Blocks","blocks","paginatedId","blocksLength","fetchPaginatedBlocks","Array","Math","ceil","key","Button","bsSize","ConductTransaction","updateRecipient","event","target","value","updateAmount","Number","conductTransaction","method","headers","alert","message","type","history","push","FormGroup","FormControl","placeholder","onChange","TransactionPool","transactionPoolMap","fetchTransactionPoolMap","fetchMineTransactions","status","fetchPoolMapInterval","setInterval","clearInterval","values","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","render","exact","getElementById"],"mappings":"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","file":"static/js/main.70d7f3f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper blue darken-3\">\r\n            <div className=\"container\">\r\n                <Link className=\"brand-logo\" to=\"/Home\">Ellectify</Link>\r\n                <ul className=\"right\">\r\n                    {/* <li><NavLink to=\"/Home\">Home</NavLink></li> */}\r\n                    <li><NavLink to=\"About\">Vote2</NavLink></li>\r\n                    <li><NavLink to=\"/Contact\">Party List</NavLink></li>\r\n                    <li><NavLink to='/conduct-transaction'>Vote</NavLink></li>\r\n                    <li><NavLink to=\"/BlockApp\">Blockchain</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","export default __webpack_public_path__ + \"static/media/voting.8db9f47c.png\";","import React from 'react';\r\n// import BallotBox from '../assets/BallotBox.png';\r\nimport voting from '../assets/voting.png';\r\n\r\nconst Home = (props) => {\r\n    // setTimeout(()=>{\r\n    //     props.history.push(\"/About\")\r\n    // },4000)\r\n    return (\r\n        <div className=\"container home\">\r\n            {/* <h4 className=\"center\">Home</h4> */}\r\n            <h2 className=\"center\">Wellcome!</h2>\r\n            <h3 className=\"center\">Today is ellection day!</h3>\r\n            {/* <img src={BallotBox} alt=\"BallotBox\" /> */}\r\n            <img src={voting} alt=\"voting\" />\r\n            <h6>Hadas Israeli, Inbar Israeli, Ohad Edry</h6>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import Card from './Card';\r\n\r\nconst PartyClass = (props) => {\r\n\r\n  return (\r\n    <Card className=\"container__party-card\">\r\n      <h4>{props.name}</h4>\r\n      <h2>{props.number}</h2>\r\n      <h6>{props.info}</h6>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PartyClass;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport PartyClass from \"./PartyClass\";\r\n\r\nconst CardElement = () => {\r\n  const parties = [\r\n    { name: \"alex\", info: \"blablabla\", number: \"12\" },\r\n    { name: \"alex\", info: \"blablabla\", number: \"123\" },\r\n    { name: \"alex\", info: \"blablabla\", number: \"124\" },\r\n    { name: \"alex\", info: \"blablabla\", number: \"125\" },\r\n    { name: \"alex\", info: \"blablabla\", number: \"126\" },\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"container\">\r\n      {parties.map((party) => (\r\n        <PartyClass key={party.number} name={party.name} info={party.info} number={party.number} />\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardElement;\r\n","import React from 'react'\r\nimport CardElement from './CardElement';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <CardElement />\r\n        \r\n{/*         \r\n            <h1 className=\"center\">Ballot Box</h1>\r\n            <p><h4>Chose your Party here:</h4></p>\r\n            <input type=\"text\" id=\"txtName\" />\r\n            <button type=\"submit\">Submit</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        posts: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts/')\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({\r\n                    posts: res.data.slice(0, 10)\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        const { posts } = this.state\r\n        const postList = posts.length ? (\r\n            posts.map(post => {\r\n                return (\r\n                    <div className=\"post card\" key={post.id}>\r\n                        <div className=\"card-content\">\r\n                            <Link to={'/' + post.id}>\r\n                                <span className=\"card-title\">{post.title}</span>\r\n                            </Link>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            <div className=\"center\">Loading, Please wait...</div>\r\n        );\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"center\">Party List</h1>\r\n                <p><h4>The competing parties:</h4></p>\r\n                {postList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Post extends Component {\r\n    state = {\r\n        post: null\r\n    }\r\n    componentDidMount() {\r\n        let id = this.props.match.params.post_id;\r\n        axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\r\n            .then(res => {\r\n                this.setState({\r\n                    post: res.data\r\n                });\r\n                console.log(res.data);\r\n            });\r\n    }\r\n    render() {\r\n        const post = this.state.post ? (\r\n            <div className=\"post\">\r\n                <h4 className=\"center\">{this.state.post.title}</h4>\r\n                <p>{this.state.post.body}</p>\r\n            </div>\r\n        ) : (\r\n            <div className=\"center\">Loading data...</div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {post}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post","export default __webpack_public_path__ + \"static/media/blockchain.05eb92aa.png\";","import React, { Component } from 'react';\r\nimport blockchain from '../assets/blockchain.png';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass BlockApp extends Component {\r\n    state = { walletInfo: {} };\r\n\r\n    componentDidMount() {\r\n        fetch(`${document.location.origin}/api/wallet-info`)\r\n            .then(response => response.json())\r\n            .then(json => this.setState({ walletInfo: json }));\r\n    }\r\n\r\n    render() {\r\n        const { address, balance } = this.state.walletInfo;\r\n\r\n        return (\r\n            <div className='App'>\r\n                \r\n                {/* <div>Wellcome!</div> */}\r\n                <br />\r\n                <div>\r\n                    <nav className=\"nav-wrapper blue darken-9\">\r\n                        <div>\r\n                            <ul className=\"right\">\r\n                                <li><NavLink to=\"/Blocks\">Blocks</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <br />\r\n                {/* <div>\r\n                    <nav className=\"nav-wrapper blue darken-9\">\r\n                        <div>\r\n                            <ul className=\"right\">\r\n                                <li><NavLink to='/conduct-transaction'>Conduct a Transaction/Vote</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <br /> */}\r\n                <div>\r\n                    <nav className=\"nav-wrapper blue darken-9\">\r\n                        <div>\r\n                            <ul className=\"right\">\r\n                                <li><NavLink to='/transaction-pool'>Vote submitted</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <br />\r\n                <img alt='blockchain' src={blockchain}></img>\r\n                <br />\r\n                <div className='WalletInfo'>\r\n                    <div>Adress: {address}</div>\r\n                    <div>Balance: {balance}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlockApp;","import React from 'react';\r\n\r\nconst Transaction = ({ transaction }) => {\r\n    const { input, outputMap } = transaction;\r\n    const recipients = Object.keys(outputMap);\r\n\r\n    return (\r\n        <div className='Transaction'>\r\n            <div>From: {`${input.address.substring(0, 20)}...`} | Balance: {input.amount}</div>\r\n            {\r\n                recipients.map(recipient => (\r\n                    <div key={recipient}>\r\n                        To: {`${recipient.substring(0, 20)}...`} | Sent: {outputMap[recipient]}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Transaction;","import React, { Component } from 'react';\r\nimport Transaction from './Transaction';\r\n\r\nclass Block extends Component {\r\n    state = { displayTransaction: false };\r\n\r\n    toggleTransaction = () => {\r\n        this.setState({ displayTransaction: !this.state.displayTransaction });\r\n    }\r\n\r\n    get displayTransaction() {\r\n        const { data } = this.props.block;\r\n        const stringifiedData = JSON.stringify(data);\r\n        const dataDisplay = stringifiedData.length > 35 ? `${stringifiedData.substring(0, 35)}...` : stringifiedData;\r\n\r\n        if (this.state.displayTransaction) {\r\n            return (\r\n                <div>\r\n                    {\r\n                        data.map(transaction => (\r\n                            <div key={transaction.id}>\r\n                                <hr />\r\n                                <Transaction transaction={transaction} />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <br />\r\n                    <bottun onClick={this.toggleTransaction}>Show Less</bottun>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>Data:{dataDisplay}</div>\r\n                <bottun onClick={this.toggleTransaction}>Show More</bottun>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        console.log('this.displayTransaction', this.displayTransaction);\r\n\r\n        const { timestamp, hash } = this.props.block;\r\n\r\n        const hashDisplay = `${hash.substring(0, 15)}...`;\r\n\r\n        return (\r\n            <div className='Block'>\r\n                <div>Hash:{hashDisplay}</div>\r\n                <div>Timestemp:{new Date(timestamp).toLocaleString()}</div>\r\n                {this.displayTransaction}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Block;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Block from './Block';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Blocks extends Component {\r\n    state = { blocks: [], paginatedId: 1, blocksLength: 0 };\r\n\r\n    componentDidMount() {\r\n        fetch(`${document.location.origin}/api/blocks/length`)\r\n            .then(response => response.json())\r\n            .then(json => this.setState({ blocksLength: json }));\r\n\r\n        this.fetchPaginatedBlocks(this.state.paginatedId)();\r\n    }\r\n\r\n    fetchPaginatedBlocks = paginatedId => () => {\r\n        fetch(`${document.location.origin}/api/blocks/${paginatedId}`)\r\n            .then(response => response.json())\r\n            .then(json => this.setState({ blocks: json }));\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('this.state', this.state);\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <nav className=\"nav-wrapper blue darken-9\">\r\n                        <div className=\"container\">\r\n                            <ul className=\"right\">\r\n                                <li><NavLink to=\"/BlockApp\">Blockchain/exit</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <h3>Blocks</h3>\r\n                <div>\r\n                    {\r\n                        [...Array(Math.ceil(this.state.blocksLength / 5)).keys()].map(key => {\r\n                            const paginatedId = key + 1;\r\n\r\n                            return (\r\n                                <span key={key} onClick={this.fetchPaginatedBlocks(paginatedId)}>\r\n                                    <Button bsSize=\"small\">{paginatedId}</Button>{' '}\r\n                                </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                {\r\n                    this.state.blocks.map(block => {\r\n                        return (\r\n                            <Block key={block.hash} block={block} />\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blocks;","import React, { Component } from 'react';\r\nimport { FormGroup, FormControl, Button } from 'react-bootstrap';\r\n// import { NavLink } from 'react-router-dom';\r\n// import history from '../history';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ConductTransaction extends Component {\r\n    state = { recipient: '', amount: 0 };\r\n\r\n\r\n    updateRecipient = event => {\r\n        this.setState({ recipient: event.target.value });\r\n    }\r\n\r\n    updateAmount = event => {\r\n        this.setState({ amount: Number(event.target.value) });\r\n    }\r\n\r\n    conductTransaction = () => {\r\n        const { recipient, amount } = this.state;\r\n\r\n        fetch(`${document.location.origin}/api/transact`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ recipient, amount })\r\n        }).then(response => response.json())\r\n            .then(json => {\r\n                alert(json.message || json.type);\r\n                this.props.history.push('/transaction-pool');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        // console.log('this.state', this.state);\r\n\r\n        return (\r\n            <div className='ConductTransaction'>\r\n                {/* <div>\r\n                    <nav className=\"nav-wrapper blue darken-9\">\r\n                        <div className=\"container\">\r\n                            <ul className=\"right\">\r\n                                <li><NavLink to=\"/BlockApp\">Blockchain</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div> */}\r\n                <h3>BallotBox</h3>\r\n                <FormGroup>\r\n                    <FormControl\r\n                        input='text'\r\n                        placeholder='Party Name'\r\n                        value={this.state.recipient}\r\n                        onChange={this.updateRecipient}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <FormControl\r\n                        input='number'\r\n                        placeholder='amount'\r\n                        value={this.state.amount}\r\n                        onChange={this.updateAmount}/>\r\n                </FormGroup>\r\n                <div>\r\n                    <Button onClick={this.conductTransaction}>Submit</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withRouter(ConductTransaction);","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Transaction from './Transaction';\r\nimport { NavLink } from 'react-router-dom';\r\n// import history from '../history';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst POLL_INERVAL_MS = 10000;\r\nclass TransactionPool extends Component {\r\n    state = { transactionPoolMap: {} };\r\n\r\n    fetchTransactionPoolMap = () => {\r\n        fetch(`${document.location.origin}/api/transaction-pool-map`)\r\n            .then(response => response.json())\r\n            .then(json => this.setState({ transactionPoolMap: json }));\r\n    }\r\n\r\n    fetchMineTransactions = () => {\r\n        fetch(`${document.location.origin}/api/mine-transactions`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    alert('success');\r\n                    this.props.history.push('/blocks');\r\n                } else {\r\n                    alert('The mine-transactions block request did not complete.');\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchTransactionPoolMap();\r\n\r\n        this.fetchPoolMapInterval = setInterval(\r\n            () => this.fetchTransactionPoolMap(),\r\n            POLL_INERVAL_MS\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.fetchPoolMapInterval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='TransactionPool'>\r\n                <div>\r\n                    <nav className=\"nav-wrapper blue darken-9\">\r\n                        <div className=\"container\">\r\n                            <ul className=\"right\">\r\n                                <li><NavLink to=\"/BlockApp\">Blockchain</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <h3>Vote Submitted</h3>\r\n                {\r\n                    Object.values(this.state.transactionPoolMap).map(transaction => {\r\n                        return (\r\n                            <div key={transaction.id}>\r\n                                <hr />\r\n                                <Transaction transaction={transaction} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <hr />\r\n                <Button onClick={this.fetchMineTransactions}>send Vote</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(TransactionPool);","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Post from './components/Post';\nimport BlockApp from './components/BlockApp';\nimport Blocks from './components/Blocks';\nimport ConductTransaction from './components/ConductTransaction';\nimport TransactionPool from './components/TransactionPool';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path='/BlockApp' component={BlockApp} />\n            <Route path='/Blocks' component={Blocks} />\n            <Route path='/conduct-transaction' component={ConductTransaction} />\n            <Route path='/transaction-pool' component={TransactionPool} />\n            <Route path='/Home' component={Home} />\n            <Route path='/About' component={About} />\n            <Route path='/Contact' component={Contact} />\n            <Route path=\"/:post_id\" component={Post} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, Switch } from 'react-router-dom';\n// import history from './history';\nimport './index.css';\nimport App from './App';\n// import Blocks from './components/Blocks';\nimport reportWebVitals from './reportWebVitals';\n// import { render } from 'react-dom';\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history}>\n      <Switch>\n        <Route exact path='/' component={App} />\n        {/* <Route path='/' component={Blocks} /> */}\n      </Switch>\n    </Router>,\n  document.getElementById('root')\n);\n\n// render(\n//   <BrowserRouter history={history}>\n//     <Switch>\n//       <Route path='/' component={App} />\n//       <Route path='/' component={Blocks} />\n//     </Switch>\n//   </BrowserRouter>,\n//   document.getElementById('root')\n// );\n\nreportWebVitals();\n"],"sourceRoot":""}